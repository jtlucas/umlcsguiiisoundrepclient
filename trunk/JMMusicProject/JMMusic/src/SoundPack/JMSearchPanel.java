/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JMSearchPanel.java
 *
 * Created on Apr 1, 2009, 12:35:48 AM
 */

package SoundPack;

import edu.uml.cs.sl.*;

import java.util.Vector;
import java.awt.event.*;


/**
 *
 * @author James
 */
public class JMSearchPanel extends javax.swing.JPanel {

    private SoundLibraryQuery query;
//    private Object jbttnSearch;
//    private Object jlblFind;
    private enum search_type{TITLE, AUTHOR, GENRE, TAGS, CUSTOM}
//    private search_type current_search = search_type.TITLE;
    private search_type current_search;


    /** Creates new form JMSearchPanel */
    public JMSearchPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jtfSearchText = new javax.swing.JTextField();
    jlblSearchBy = new javax.swing.JLabel();
    jlblFind = new javax.swing.JLabel();
    jbttnSearch = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jlSearch = new javax.swing.JList();

    jtfSearchText.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        jtfSearchTextKeyPressed(evt);
      }
    });

    jlblSearchBy.setText("Search By:");

    jlblFind.setText("Search For:");

    jbttnSearch.setText("Search");
    jbttnSearch.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jbttnSearchActionPerformed(evt);
      }
    });

    jlSearch.setModel(new javax.swing.AbstractListModel() {
      String[] strings = { "Title", "Artist", "Genre", "Tags", "Custom" };
      public int getSize() { return strings.length; }
      public Object getElementAt(int i) { return strings[i]; }
    });
    jlSearch.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
        jlSearchValueChanged(evt);
      }
    });
    jScrollPane1.setViewportView(jlSearch);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jlblSearchBy)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jlblFind)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jtfSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addComponent(jbttnSearch))
        .addContainerGap(28, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jlblSearchBy)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(24, 24, 24)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jlblFind)
          .addComponent(jtfSearchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jbttnSearch)
        .addContainerGap(106, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

    public void searchFor(ActionEvent evt){
        jbttnSearchActionPerformed(evt);
    }

    private void jbttnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbttnSearchActionPerformed
        // TODO add your handling code here:
        try{
            Vector<SoundLibraryEntry> results = new Vector<SoundLibraryEntry>();
            query = new SoundLibraryQuery();
            if(jtfSearchText.getText().isEmpty()){
                results = query.executeQuery();
                }
            else{
                switch( current_search ){
                    case TITLE:
                        query.setQuerySearchByTitle(jtfSearchText.getText());
                        break;
                    case AUTHOR:
                        query.setQuerySearchByAuthor(jtfSearchText.getText());
                        break;
                    case GENRE:
                        query.setQuerySearchByGenre(jtfSearchText.getText());
                        break;
                    case TAGS:
                        query.setQuerySearchByTags(jtfSearchText.getText());
                        break;
                    case CUSTOM:
                        query.setQuery(jtfSearchText.getText());
                        break;
                    }
                    results = query.executeQuery();
                    JMMusicMain.Singleton.updateFromSearch( results );
//                    new JMMusicMain().updateFromSearch(results);
//                    this.removeAll();
//                    this.add(new JMMusicMain().getContentPane().getComponent(0));
                    
                    }
            }
               catch( Exception exception ){
                   System.err.println( exception );
               }
    }//GEN-LAST:event_jbttnSearchActionPerformed

    private void jlSearchValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlSearchValueChanged
        // TODO add your handling code here:
        int sel = jlSearch.getSelectedIndex();
        if(sel == 0){
            current_search = search_type.TITLE;
        } else if(sel == 1){
            current_search = search_type.AUTHOR;
        } else if(sel == 2){
            current_search = search_type.GENRE;
        } else if(sel == 3){
            current_search = search_type.TAGS;
        } else if(sel == 4){
            current_search = search_type.CUSTOM;
        }
        jtfSearchText.requestFocus();
    }//GEN-LAST:event_jlSearchValueChanged

    private void jtfSearchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            searchFor(null);
        }
    }//GEN-LAST:event_jtfSearchTextKeyPressed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jbttnSearch;
  private javax.swing.JList jlSearch;
  private javax.swing.JLabel jlblFind;
  private javax.swing.JLabel jlblSearchBy;
  private javax.swing.JTextField jtfSearchText;
  // End of variables declaration//GEN-END:variables

}
